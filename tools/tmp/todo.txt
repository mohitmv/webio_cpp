Priority Queue
1. 




----------- To be done

4. Creating a set of commonly usuable elements. Like: Display-Table,
	4.1 Inhance the text type input.
5. Multiple Window handling.
6. Login and session system.
7. Front-end -> Loading icon when API call (and disable everything else).
8. How to handle Front-end chached content.
9. Presentation and documentation.
10. Core Issues. 
		 - Commonly used elements like: Table,
		 - HTML design part.
		 - Session Management system.
		 - Disabling all inputs whenever an API is called.
		 - checkbox(default: allow_multiple)
11. Use enum instead of component names.
12. Support for C++ as well.


----------- Long Term ToDos
3. Implementing validating functions. 
4. URL system.



--------------------------------------------------------


Size_Unit_Numeric = {x+"px", for x in {0, 1, 2, 3, ...}}
Size_Unit = "auto" | Size_Unit_Numeric

Lambda = {lambda fm: expr}

Dropdown_Options = List of (String | tuple of (obj, String))

Colors = Same as html colors (i.e. {fixed colors like "red", "black", ..} union {"#******" series} union {rgb(r, g, b)}
 
Cell_Attributes := 
	align = left|right|middle, 
	valign = top|bottom|middle, 
	padding = Size_Unit_Numeric , 
	bgcolor = Colors, 
	border_width = Size_Unit_Numeric, 
	border_color = Colors, 
	*children = List-of-Io


Icons = list-of-valid-icon-ids

Implement Front-end display....





Io = 

[Done]	1. Text(HTML, onlick=None|Lambda), 
[Done]	2. Image(src, height = Size_Unit, width = Size_Unit, opacity = x, rounded=True|False) : x in Real_Range([0, 1]), 
[Done]	3. Button(label=String|None, icon=Icons|None, onclick=None|Lambda, theme = "default" | "black_in_white"), 
[Done]	5. Icon(icon = None|Icons, font_size = Size_Unit_Numeric), 

[Done]	4. Input(label=String, input_type=text|textarea|dropdown|checkbox|file, allow_multiple=True|False,  options = Dropdown_Options, allow_search = True|False, default_rows=4, default_value=String;Int;List of Int;List of Files), 
			[Done]		text
			[Done]		textarea
			[Done]		dropdown
			[Done]		checkbox
			[Skipped]	file... (Read FromData in HTML5)


[Done]	6. Menu(icon=Icons, click_actions = List of (String, None|Lambda)), 

[Done]	7. Hlist(width=list of Size_Unit, ..Cell_Attributes..), 
[Done]	8. Vlist(height=list of Size_Unit, ..Cell_Attributes..), 







------------------------------------------------------------------------------------

1. Front-end display part is done...
2. design python classes, so that I can use this to display in front-end.
	fm1 = Button("Submit");
	students = [["AA", "bbb", "CCC"]];
	fm2 = Vlist(
			Display("Welcome to our website", size="h2"), 
			Hlist(
				Vlist(
					Input("Enter Your Name"), 
					Input("Your parents Name ?"), 
					Input("Your class ?", options=range(1, 10)), 
					Button("Submit", onclick=lambda fm: students.append([fm[0], fm[1], fm[2]]) )
				), 
				Vlist([Hlist(i, padding="5px") for i in students])
			)
		)










